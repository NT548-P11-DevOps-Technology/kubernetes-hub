apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-deployment
  labels:
    app: class-management-student-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: class-management-student-service
  template:
    metadata:
      labels:
        app: class-management-student-service
    spec:
      # initContainers:
      #   - name: wait-for-mysql
      #     image: busybox
      #     command: ['sh', '-c', 'until nc -z -v -w30 student-service-mysql 3306; do echo "Waiting for MySQL"; sleep 5; done']
      containers:
        - name: class-management-student-service-container
          image: th1enlm02/class-management-student-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              valueFrom:
                configMapKeyRef:
                  name: student-configmap
                  key: SPRING_DATASOURCE_URL
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: student-secret
                  key: SPRING_DATASOURCE_USERNAME
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: student-secret
                  key: SPRING_DATASOURCE_PASSWORD

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: student-mysql-deployment
  labels:
    app: student-service-mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: student-service-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: student-service-mysql
    spec:
      containers:
        - name: student-service-mysql-container
          image: mysql:8.3.0
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_HOST
              value: student-service-mysql
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: student-mysql-configmap
                  key: dbName
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: student-mysql-secret
                  key: username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: student-mysql-secret
                  key: password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: student-mysql-secret
                  key: rootPassword
          livenessProbe:
            exec:
              command:
              - mysqladmin
              - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
              - mysqladmin
              - ping
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: student-service-mysql-data
              mountPath: /var/lib/mysql
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "sleep 10 && mysql -h localhost -u root -p$MYSQL_ROOT_PASSWORD < /docker-entrypoint-initdb.d/init.sql"]
      volumes:
        - name: student-service-mysql-data
          persistentVolumeClaim:
            claimName: student-mysql-pvc
        - name: initdb
          configMap:
            name: student-mysql-initdb
