apiVersion: apps/v1
kind: Deployment
metadata:
  name: lecturer-deployment
  labels:
    app: class-management-lecturer-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: class-management-lecturer-service
  template:
    metadata:
      labels:
        app: class-management-lecturer-service
    spec:
      # initContainers:
      #   - name: wait-for-mongodb
      #     image: busybox
      #     command: ['sh', '-c', 'until nc -z -v -w30 lecturer-service-mongodb 27017; do echo "Waiting for MongoDB"; sleep 5; done']
      imagePullSecrets:
        - name: harbor-secret
      containers:
        - name: class-management-lecturer-service-container
          image: harbor.th1enlm02.live/production/class-management-lecturer-service:25e713e-1734339345 # {"$imagepolicy": "production:lecturer-service-policy"}
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lecturer-mongodb-deployment
  labels:
    app: lecturer-service-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lecturer-service-mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: lecturer-service-mongodb
    spec:
      containers:
        - name: lecturer-service-mongodb-container
          image: mongo:7.0.9
          ports:
            - containerPort: 27017
          volumeMounts:
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
